<script type="text/javascript">
  </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment-with-locales.min.js"></script>
    
<script type="text/javascript">

    var existingScripth = document.getElementById('primehPopper');
    if (!existingScripth) {
        
        var countryh = 'primehighlightcountry';
        var primehcountryName = '';
        const scriptpopperh = document.createElement('script');
        // scriptpopperh.src = 'https://unpkg.com/@popperjs/core@2/dist/umd/popper.min.js';
        scriptpopperh.src = 'https://unpkg.com/popper.js@1';
        scriptpopperh.id = 'primehPopper';
        document.body.appendChild(scriptpopperh);
        setTimeout(function(){ 
            const scripttippyh = document.createElement('script');
            // scripttippyh.src = 'https://unpkg.com/tippy.js@6/dist/tippy-bundle.umd.js';
            scripttippyh.src = 'https://unpkg.com/tippy.js@5';
            scripttippyh.id = 'primehTippy';
            document.body.appendChild(scripttippyh);
        }, 500);

        setTimeout(function(){ 
            checkprimehjquery();
        }, 1000);

    }

    function checkprimehjquery() {
      if (window.jQuery) {
        checkhVariantInventory('{{product.selected_or_first_available_variant.title}}',"first");

        $(document).on("click", ".variants-ui__option-value-name", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            setTimeout(function(){ 
              optionMaph = $('.variants-ui__option-values').attr("data-variant-option-chosen-value");
              checkhVariantInventory(optionMaph,"first");
            }, 100);
          }
        });

        $(document).on("change", ".single-option-selector", function() {
            var optionMaph = [];
            if(optionMaph.length == 0){
                $(".single-option-selector").each(function(key) {
                optionMaph[key] = $(this).val();
                });
                checkhVariantInventory(optionMaph);
            }
        });

        $(document).on("change", ".ProductForm__Option select", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".ProductForm__Option select").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".tt-options-swatch li", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".tt-options-swatch li").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".swatch-element", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".swatch-element").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("change", ".form__input--select", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".form__input--select").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("change", ".sgl-opt-selector-product-template", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".sgl-opt-selector-product-template").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".tt-options-swatch li", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".tt-options-swatch li").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("change", ".product-option-value-item", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".product-option-value-item").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".clickyboxes a", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".clickyboxes a").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("change", "[data-product-options-container] .form-field-input", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $("[data-product-options-container] .form-field-input").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("change", "#data-product-option-0", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $("#data-product-option-0").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".product-options__section .active", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".product-options__section .active").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".product-options__value", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".product-options__value").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".variant-input", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".variant-input").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("change", ".product-form__single-selector", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".product-form__single-selector").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".gt_swatches--select.gf_active", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".gt_swatches--select.gf_active").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".nt-swatch", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".nt-swatch").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("change", ".disclosure--input", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".disclosure--input").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });

        $(document).on("click", ".product-form__input input", function() {
          var optionMaph = [];
          if(optionMaph.length == 0){
            $(".product-form__input input[type=radio]:checked").each(function(key) {
              optionMaph[key] = $(this).val();
            });
            checkhVariantInventory(optionMaph);
          }
        });
        
      } else {
              
              setTimeout(function() { checkprimehjquery() }, 2000);
          }
    }

    function removehighlight() {
        var primeh1 = document.getElementsByClassName('1primeHighlights');
        if(primeh1[0]){
          // primeh1[0].style.display= 'block';
        } else {
            var remove_div1 = document.getElementsByClassName('1primeHighlights');
            if(remove_div1[0]){
              remove_div1[0].parentNode.removeChild(remove_div1[0]);
            }
        }
        var primeh2 = document.getElementsByClassName('2primeHighlights');
        if(primeh2[0]){
          // primeh2[0].style.display= 'block';
        } else {
            var remove_div2 = document.getElementsByClassName('2primeHighlights');
            if(remove_div2[0]){
                remove_div2[0].parentNode.removeChild(remove_div2[0]);
            }
        }
        var primeh3 = document.getElementsByClassName('3primeHighlights');
        if(primeh3[0]){
          // primeh3[0].style.display= 'block';
        } else {
            var remove_div3 = document.getElementsByClassName('3primeHighlights');
            if(remove_div3[0]){
                remove_div3[0].parentNode.removeChild(remove_div3[0]);
            }
        }
    }

    window.addEventListener('load', (event) => {
      
      primehonload();
    });

    function expdeliveryhdate(value,count) {
      var weekdays = '';
      var dateformatselected = '';
      var datelang = 'en';
      var primehTextdate = document.getElementsByClassName('primehTitle');
      var realvalue = value;
      var pos = realvalue.indexOf("[[today");
      var pos2 = realvalue.indexOf("]]");
      var startres = realvalue.slice(pos+8, pos2);
      realvalue = realvalue.replace("[[today,", "" );
      realvalue = realvalue.replace("]]", "" );
      var pos3 = realvalue.indexOf("[[today");
      var pos4 = realvalue.indexOf("]]");
      var endres = realvalue.slice(pos3+8, pos4);
      realvalue = realvalue.replace("[[today,", "" );
      realvalue = realvalue.replace("]]", "" );
      var getlang = startres.split(",");
      var wrongdays = weekdays.split(",");
      // var days = {sun:0,mon:1,tue:2,wed:3,thu:4,fri:5,sat:6};
      var startDate = new Date(new Date().getTime()+(parseInt(startres)*24*60*60*1000));
      var today = new Date(new Date().getTime());
      var firstinc=0;
      while (today <= startDate) {
          var getday = String(today.getDay());
          if(wrongdays.indexOf(getday) != -1){
          startDate.setDate(startDate.getDate() + 1);
          firstinc++;
          }
          today.setDate(today.getDate() + 1);
      }
      var setlang = 'en';
      if(getlang.length > 1){
          setlang = getlang[1];
      }
      moment.locale(setlang);
      value = value.replace("[[today,"+startres+"]]", moment(startDate).locale(setlang).format(dateformatselected));
      // value = value.replace("[[today,"+startres+"]]", moment(startDate).format(dateformatselected));

      var extradays = firstinc+parseInt(endres);
      var endDate = new Date(new Date().getTime()+(extradays*24*60*60*1000));
      var todayend = startDate;
      var secinc=0;
      while (todayend <= endDate) {
          var getday = String(todayend.getDay());
          if(wrongdays.indexOf(getday) != -1){
          endDate.setDate(endDate.getDate() + 1);
          secinc++;
          }
          todayend.setDate(todayend.getDate() + 1);
      }
      value = value.replace("[[today,"+endres+"]]", moment(endDate).locale(setlang).format(dateformatselected));
      // value = value.replace("[[today,"+endres+"]]", moment(endDate).format(dateformatselected));
      primehTextdate[count].innerHTML = value;
      var getchild = primehTextdate[count].getElementsByClassName('prime-counter');
      if(getchild[0]){
        getchild[0].classList.remove("prime-counter");
      }
    }

    function expdeliveryhsubdateprime(value,count) {
      var weekdays = '';
      var dateformatselected = '';
      var datelang = 'en';
      var primehTextdate = document.getElementsByClassName('primehSubTitle');
      var realvalue = value;
      var pos = realvalue.indexOf("[[today");
      var pos2 = realvalue.indexOf("]]");
      var startres = realvalue.slice(pos+8, pos2);
      realvalue = realvalue.replace("[[today,", "" );
      realvalue = realvalue.replace("]]", "" );
      var pos3 = realvalue.indexOf("[[today");
      var pos4 = realvalue.indexOf("]]");
      var endres = realvalue.slice(pos3+8, pos4);
      realvalue = realvalue.replace("[[today,", "" );
      realvalue = realvalue.replace("]]", "" );
      var getlang = startres.split(",");
      var wrongdays = weekdays.split(",");
      // var days = {sun:0,mon:1,tue:2,wed:3,thu:4,fri:5,sat:6};
      var startDate = new Date(new Date().getTime()+(parseInt(startres)*24*60*60*1000));
      var today = new Date(new Date().getTime());
      var firstinc=0;
      while (today <= startDate) {
          var getday = String(today.getDay());
          if(wrongdays.indexOf(getday) != -1){
          startDate.setDate(startDate.getDate() + 1);
          firstinc++;
          }
          today.setDate(today.getDate() + 1);
      }
      var setlang = 'en';
      if(getlang.length > 1){
          setlang = getlang[1];
      }
      moment.locale(setlang);
      value = value.replace("[[today,"+startres+"]]", moment(startDate).locale(setlang).format(dateformatselected));
      // value = value.replace("[[today,"+startres+"]]", moment(startDate).format(dateformatselected));

      var extradays = firstinc+parseInt(endres);
      var endDate = new Date(new Date().getTime()+(extradays*24*60*60*1000));
      var todayend = startDate;
      var secinc=0;
      while (todayend <= endDate) {
        var getday = String(todayend.getDay());
        if(wrongdays.indexOf(getday) != -1){
        endDate.setDate(endDate.getDate() + 1);
        secinc++;
        }
        todayend.setDate(todayend.getDate() + 1);
      }
      value = value.replace("[[today,"+endres+"]]", moment(endDate).locale(setlang).format(dateformatselected));
      // value = value.replace("[[today,"+endres+"]]", moment(endDate).format(dateformatselected));
      primehTextdate[count].innerHTML = value;
      var getsubchild = primehTextdate[count].getElementsByClassName('prime-d-none');
      if(getsubchild[0]){
        getsubchild[0].classList.remove("prime-d-none");
      }
    }

    function checkhVariantInventory(optionMap,myfirstone='') {
        var productname = '{{product.handle}}';  
        var variantproductid = '{{product.id}}';   
        var mydomclass = document.getElementsByClassName('primehVariantInventory');   
        if(mydomclass.length > 0){
            if(optionMap.length > 0){  
                var realval = '';
                if(myfirstone == "first"){
                    realval = optionMap;
                }else{
                    for(var i = 0; i < optionMap.length; i++){
                        var spaces = ' / ';
                        if(i == 0){
                            spaces = '';
                        }
                        realval += spaces+optionMap[i];
                    }
                }
                
                var primeHighlightsAll = document.getElementsByClassName('primeHighlights');
                for (var i = 0; i < primeHighlightsAll.length; i++) {
                    var primehOuterClass = primeHighlightsAll[i].getAttribute('data-primehOuterClass');
                    var primehOuterStyle = primeHighlightsAll[i].getAttribute('data-primehOuterStyle');
                    var primehInnerClass = primeHighlightsAll[i].getAttribute('data-primehInnerClass');
                    var primehInnerStyle = primeHighlightsAll[i].getAttribute('data-primehInnerStyle');
                    var primehImageClass = primeHighlightsAll[i].getAttribute('data-primehImageClass');
                    var primehImageStyle = primeHighlightsAll[i].getAttribute('data-primehImageStyle');
                    var primehTextClass = primeHighlightsAll[i].getAttribute('data-primehTextClass');
                    var primehTextStyle = primeHighlightsAll[i].getAttribute('data-primehTextStyle');
                    var primehGroup = primeHighlightsAll[i].getAttribute('data-primehGroup');
                    hitprimehpage(productname,variantproductid,primehOuterClass,primehOuterStyle,primehInnerClass,primehInnerStyle,primehImageClass,primehImageStyle,primehTextClass,primehTextStyle,primehGroup,realval)
                }
            }
        }
    }

    function hitprimehpage(productname,variantproductid,primehOuterClass,primehOuterStyle,primehInnerClass,primehInnerStyle,primehImageClass,primehImageStyle,primehTextClass,primehTextStyle,primehGroup,realval) {
        
        if(primehGroup == 1){
      var urlhit = productname+'/?view=primehvariant&outerclass=='+primehOuterClass+'&outerstyle=='+primehOuterStyle+'&innerclass=='+primehInnerClass+'&innerstyle=='+primehInnerStyle+'&imageclass=='+primehImageClass+'&imagestyle=='+primehImageStyle+'&textclass=='+primehTextClass+'&textstyle=='+primehTextStyle+'&group==1&page=='+realval;
        }else if(primehGroup == 2){
      var urlhit = productname+'/?view=primehvarianttwo&outerclass=='+primehOuterClass+'&outerstyle=='+primehOuterStyle+'&innerclass=='+primehInnerClass+'&innerstyle=='+primehInnerStyle+'&imageclass=='+primehImageClass+'&imagestyle=='+primehImageStyle+'&textclass=='+primehTextClass+'&textstyle=='+primehTextStyle+'&group==2&page=='+realval;
        }else{
            var urlhit = productname+'/?view=primehvariantthree&outerclass=='+primehOuterClass+'&outerstyle=='+primehOuterStyle+'&innerclass=='+primehInnerClass+'&innerstyle=='+primehInnerStyle+'&imageclass=='+primehImageClass+'&imagestyle=='+primehImageStyle+'&textclass=='+primehTextClass+'&textstyle=='+primehTextStyle+'&group==3&page=='+realval;
        }
        var xhr = new XMLHttpRequest();
        xhr.open("GET", urlhit, true);
        xhr.onreadystatechange  = function() {
            if (this.readyState === XMLHttpRequest.DONE) {
                if (this.status === 200) {
                    if(this.responseText == 0){
                        $('.outerprimeh'+variantproductid+'-'+primehGroup+' .primehText .primehVariantInventory').html("0");
                        $('.outerprimeh'+variantproductid+'-'+primehGroup+' .prime-counter').removeClass("prime-counter");
                    }else{
                        $('.outerprimeh'+variantproductid+'-'+primehGroup).replaceWith( this.responseText );
                        $('.outerprimeh'+variantproductid+'-'+primehGroup+' .prime-counter').removeClass("prime-counter");
                        var countryclassh = document.getElementsByClassName('primehCountry');
                        for (var i = 0; i < countryclassh.length; i++) {
                            var counrtylisth = countryclassh[i].getAttribute('data-countryselectedh');
                            var position = counrtylisth.search(primehcountryName);
                            if(position < 0){ 
                              countryclassh[i].style.cssText = 'display:none !important';
                            }else{
                              countryclassh[i].style.cssText = 'display:unset !important';
                            }
                        }
                        setTimeout(function(){ 
                            primehonload();
                        }, 500); 
                    }
                } else {
                    console.log('failed variant req');
                }
            }
        };
        xhr.send();

    }

    function primehsetlivevisit(mypage,myproductid,highclassname) {
      setTimeout(function(){ 
        var settimelive = ;
        var setvisitlimit = ;

        var d = new Date();
        var time = setcookietimestamph(settimelive);
        var mytime = '';
        if(settimelive < 5){
          mytime = (time * 60 );
        }else if(settimelive > 4 && settimelive < 8){
          mytime =(time * 60 * 60 );
        }else if(settimelive > 7){
          mytime = (time * 24 * 60 * 60 );
        }

        var realhighclass = '';
        if(highclassname == 'primehloop'){
          realhighclass = "primevisitshtitle";
        }else{
          realhighclass = 'primevisitshsubtitle';
        }

        var primeloop2 = document.getElementsByClassName(highclassname);
        for (var i = 0; i < primeloop2.length; i++) {
          var bigloop2 = primeloop2[i].parentElement;
          var smallloop2 = bigloop2.parentElement;
          var parentloop2 = smallloop2.getAttribute('data-primeproductid');
          var myuser = getCookieprimeh("primevisits"+parentloop2);
          if (myuser != "") {
            myhttpreqh(parentloop2,0,mytime,setvisitlimit,highclassname,realhighclass);
          } else {
            myhttpreqh(parentloop2,1,mytime,setvisitlimit,highclassname,realhighclass);
            setCookieprimeh("primevisits"+parentloop2, 'setprimevisits', settimelive);
          }
        }

        var primeloop = document.getElementsByClassName(highclassname);
        for (var i = 0; i < primeloop.length; i++) {
          if(mypage == 'product'){
            var bigloop = primeloop[i].parentElement;
            var smallloop = bigloop.parentElement;
            var parentloop = smallloop.getAttribute('data-primeproductid');
            if(parentloop == myproductid){
              primeloop[i].classList.add(realhighclass+parentloop);
            }else{
              var removeloop = primeloop[i].parentElement;
              var bigloop = removeloop.parentElement;
              var removeloop2 = bigloop.parentElement;
              removeloop2.style.visibility = 'hidden';
              primeloop[i].classList.remove(highclassname);
              removeloop2.remove();
            }
          }else{
            var oldloop = primeloop[i].parentElement;
            var bigloop = oldloop.parentElement;
            var newloop = bigloop.parentElement;
            newloop.style.visibility = 'hidden';
            primeloop[i].classList.remove(highclassname);
            newloop.remove();
          }
        }
      }, 500);
    }

    function myhttpreqh(lastid,mynew,gettime,setvisitlimit,highclassname,realhighclass) {
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
          var pageliveview = JSON.parse(this.responseText);
          var primevisits = document.getElementsByClassName(realhighclass+lastid);
          for (var i = 0; i < primevisits.length; i++) {
            if(setvisitlimit < pageliveview.pageviews){
              primevisits[i].innerHTML = pageliveview.pageviews;
              var removeloop = primevisits[i].parentElement;
              removeloop.style.visibility = 'visible';
            }else{
              var removeloop = primevisits[i].parentElement;
              removeloop.style.visibility = 'hidden';
              primevisits[i].classList.remove(highclassname);
              removeloop.remove();
              removehighlight();
            }
          }
        }
      };
      xhttp.open("GET","https://visitcounterstaging.thalia-apps.com/?shopifyid="+lastid+"&new="+mynew+"&time="+gettime, true);
      xhttp.send();
    }

    function mymodalprimeh() {
      var target = document.getElementById("prime-modal-window");
      var parenttarget = target.parentElement;
      if (parenttarget.classList.contains('prime-modal-open')) {
        parenttarget.classList.remove('prime-modal-open');
        document.getElementById('prime-modal-content').innerHTML = '';
      }
    }

    function redirectHighlightLink(highlightval,links,primehighlightid,modalsize) {

        if(highlightval != ''){

        // console.log('clicke');
            var highlightlink = highlightval;
            if(links == 0){
                window.location.href = highlightlink;
            }else{
                window.open(highlightlink,'_blank');
            }

        }
        if(links == 2){
            var target = document.getElementById("prime-modal-outer");
            var myclasses = '';
            if(modalsize == 0){
                myclasses = 'prime-modal-window prime-modal-small';
            }else if(modalsize == 2){
                myclasses = 'prime-modal-window prime-modal-large';
            }else{
                myclasses = 'prime-modal-window';
            }
            
            document.getElementById('prime-modal-outer').classList.add('prime-modal-open');
            var setclass = document.getElementById('prime-modal-window');
            setclass.className = '';
            setclass.className = myclasses;
            var xhr = new XMLHttpRequest();
            var url = '/?view=primemeta&id==highlight-popup-'+primehighlightid;
            xhr.open("GET", url, true);
            xhr.setRequestHeader("Cache-Control", "max-age=3600");
            xhr.onreadystatechange = function() {
                if (this.readyState === XMLHttpRequest.DONE) {
                    if (this.status === 200) {
                        document.getElementById('prime-modal-content').innerHTML = this.responseText;
                    } else {
                        console.log(this.status, this.statusText);
                    }
                }
                };
                xhr.send();
        }
    
    }

    function toValidDateprime(datestring){
        return datestring.replace(/(\d{2})(\/)(\d{2})/, "$3$2$1");   
    }

    function myTimerprime(newvalue,count) {

      var primehText2 = document.getElementsByClassName('primehTitle');
      var againvalue = newvalue;
      var pos3 = newvalue.indexOf("[[ CountdownTimer:");
      var pos4 = newvalue.indexOf("M,");
      if(pos4 < 0){
          pos4 = newvalue.indexOf(" ]]");
          var res = newvalue.slice(pos3+18, pos4);
      }else{
          var res = newvalue.slice(pos3+18, pos4+1);
      }
      var pos5 = newvalue.indexOf(" ]]");
      var endres = againvalue.slice(pos3+18, pos5);
      newvalue = newvalue.replace("[[ CountdownTimer:", "" );
      newvalue = newvalue.replace(" ]]", "" );
      var getlang = endres.split(",");
      var setlang2 = 'en';
      if(getlang.length > 1){
        if(getlang[1] == 'custom'){
          if (getlang[2] == null){
            var setdays = '';
          }else{
            var setdays = getlang[2];
          }
          if (getlang[3] == null){
            var sethours = '';
          }else{
            var sethours = getlang[3];
          }
          if (getlang[4] == null){
            var setminutes = '';
          }else{
            var setminutes = getlang[4];
          }
          if (getlang[5] == null){
            var setseconds = '';
          }else{
            var setseconds = getlang[5];
          }
        }else{
          setlang2 = getlang[1];
          var setmoment = moment();
          setmoment.locale(setlang2);
          setmoment.subtract({hours: 0, minutes: 0, seconds: 35});
          var getseconds = setmoment.toNow(true);
          setmoment.subtract({hours: 0, minutes: 10, seconds: 59});
          var getminutes = setmoment.toNow(true);
          setmoment.subtract({hours: 5, minutes: 59, seconds: 59});
          var gethours = setmoment.toNow(true);
          setmoment.subtract({hours: 222, minutes: 59, seconds: 59});
          var getdays = setmoment.toNow(true);
          var setseconds = getseconds.split(" ").pop();
          var setminutes = getminutes.split(" ").pop();
          var sethours = gethours.split(" ").pop();
          var setdays = getdays.split(" ").pop();
        }
      }else{
        var setdays = "days";
        var sethours = "hours";
        var setminutes = "minutes";
        var setseconds = "seconds";
      }

      var x = setInterval(function() { 
        let end = new Date(toValidDateprime(res));
        let start = new Date();
        var remaintime = end - start;
        var days = Math.floor(remaintime / (1000 * 60 * 60 * 24));
        var hours = Math.floor((remaintime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((remaintime % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((remaintime % (1000 * 60)) / 1000);
        var realtimeleft = days +" "+ setdays +" "+ hours +" " + sethours +" "+ minutes +" "+ setminutes +" "+ seconds +" " + setseconds + " ";
        if(seconds < 0){
            realtimeleft = "0 "+setdays+" 0 "+sethours+" 0 "+setminutes+" 0 "+setseconds;
        }
        primehText2[count].innerHTML = newvalue.replace(endres,realtimeleft);
        primehText2[count].classList.remove("prime-counter");
        if (remaintime < 0) { 
            clearInterval(x); 
        } 
      }, 1000);

    }

    function myTimersubprime(newvalue,count) {

      var primehText2 = document.getElementsByClassName('primehSubTitle');
      var againvalue = newvalue;
      var pos3 = newvalue.indexOf("[[ CountdownTimer:");
      var pos4 = newvalue.indexOf("M,");
      if(pos4 < 0){
          pos4 = newvalue.indexOf(" ]]");
          var res = newvalue.slice(pos3+18, pos4);
      }else{
          var res = newvalue.slice(pos3+18, pos4+1);
      }
      var pos5 = newvalue.indexOf(" ]]");
      var endres = againvalue.slice(pos3+18, pos5);
      newvalue = newvalue.replace("[[ CountdownTimer:", "" );
      newvalue = newvalue.replace(" ]]", "" );
      var getlang = endres.split(",");
      var setlang2 = 'en';
      if(getlang.length > 1){
        if(getlang[1] == 'custom'){
          if (getlang[2] == null){
            var setdays = '';
          }else{
            var setdays = getlang[2];
          }
          if (getlang[3] == null){
            var sethours = '';
          }else{
            var sethours = getlang[3];
          }
          if (getlang[4] == null){
            var setminutes = '';
          }else{
            var setminutes = getlang[4];
          }
          if (getlang[5] == null){
            var setseconds = '';
          }else{
            var setseconds = getlang[5];
          }
        }else{
          setlang2 = getlang[1];
          var setmoment = moment();
          setmoment.locale(setlang2);
          setmoment.subtract({hours: 0, minutes: 0, seconds: 35});
          var getseconds = setmoment.toNow(true);
          setmoment.subtract({hours: 0, minutes: 10, seconds: 59});
          var getminutes = setmoment.toNow(true);
          setmoment.subtract({hours: 5, minutes: 59, seconds: 59});
          var gethours = setmoment.toNow(true);
          setmoment.subtract({hours: 222, minutes: 59, seconds: 59});
          var getdays = setmoment.toNow(true);
          var setseconds = getseconds.split(" ").pop();
          var setminutes = getminutes.split(" ").pop();
          var sethours = gethours.split(" ").pop();
          var setdays = getdays.split(" ").pop();
        }
      }else{
        var setdays = "days";
        var sethours = "hours";
        var setminutes = "minutes";
        var setseconds = "seconds";
      }

      var x = setInterval(function() { 
        let end = new Date(toValidDateprime(res));
        let start = new Date();
        var remaintime = end - start;
        var days = Math.floor(remaintime / (1000 * 60 * 60 * 24));
        var hours = Math.floor((remaintime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((remaintime % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((remaintime % (1000 * 60)) / 1000);
        var realtimeleft = days +" "+ setdays +" "+ hours +" " + sethours +" "+ minutes +" "+ setminutes +" "+ seconds +" " + setseconds + " ";
        if(seconds < 0){
            realtimeleft = "0 "+setdays+" 0 "+sethours+" 0 "+setminutes+" 0 "+setseconds;
        }
        primehText2[count].innerHTML = newvalue.replace(endres,realtimeleft);
        primehText2[count].classList.remove("prime-counter");
        if (remaintime < 0) { 
            clearInterval(x); 
        } 
      }, 1000); 

    }

    function primehonload() {

      screensizehFunction();
      
        var mypage = '{{template}}';
        var myproductid = '{{product.id}}';
        setTimeout(function(){ 
            primehsetlivevisit(mypage,myproductid,'primehloop');
            primehsetlivevisit(mypage,myproductid,'primehsubtitleloop');
            
        }, 500); 

        var primehText = document.getElementsByClassName('primehTitle');
        if(primehText[0]){
          for (var i = 0; i < primehText.length; i++) {
            var value = primehText[i].innerHTML;
            if( value.indexOf("[[today") != -1  ){
              expdeliveryhdate(value,i);
            }
          }
        }

        var prime2hsubText = document.getElementsByClassName('primehSubTitle');
        if(prime2hsubText[0]){
          for (var i = 0; i < prime2hsubText.length; i++) {
            var value = prime2hsubText[i].innerHTML;
            if( value.indexOf("[[today") != -1  ){
              expdeliveryhsubdateprime(value,i);
            }
          }
        }

        var primehsku = '{{ProductSKU}}';
        var skuclass = document.getElementsByClassName('primehsku');
        if(primehsku == 0){
            for (var i = 0; i < skuclass.length; i++) {
                if(skuclass[i].dataset.sku == 0){
                    var parentsku = skuclass[i].parentElement;
                    var parent2sku = parentsku.parentElement;
                    parent2sku.style.cssText = 'display:none !important';
                }
            }
        }

        document.getElementById("prime-modal-close").onclick = function() {mymodalprimeh()};
        window.onclick = function(event) {
            if (event.target.classList[1] == 'prime-modal-open') {
                mymodalprimeh();
            }
        }

        var primehText = document.getElementsByClassName('primehTitle');
        setTimeout(function(){ 
            if(primehText[0]){
                for (var i = 0; i < primehText.length; i++) {
                    var value = primehText[i].innerHTML;
                    
                    if( value.indexOf("CountdownTimer:") != -1  ){
                        myTimerprime(value,i);
                    }
                }
            } 

            var primehsubText = document.getElementsByClassName('primehSubTitle');
            if(primehsubText[0]){
              for (var i = 0; i < primehsubText.length; i++) {
                var value = primehsubText[i].innerHTML;
                if( value.indexOf("CountdownTimer:") != -1  ){
                  myTimersubprime(value,i);
                }
              }
            }

            var getpage = '{{request.page_type}}';
            var primehText2 = document.getElementsByClassName('primehText primehVariantInventory');
            if(primehText2[0]){
                if(getpage == 'collection'){
                    for (var i = 0; i < primehText2.length; i++) {
                        var oldloop = primehText2[i].parentElement;
                        var newloop = oldloop.parentElement;
                        newloop.remove();
                    }
                }
            }

        }, 1000);

        removehighlight();

        setTimeout(function(){ 
            // window.onload = function() {
                var primeinstances = tippy('[data-tippy-content]');
            // };
        }, 500);

        if(countryh == 'primehighlightcountry'){
            countryh = 'newprimehighlightcountry';
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
            
                if (this.readyState == 4 && this.status == 200) {
                    var mycountryoldh = this.responseText;
                    mycountryoldh = mycountryoldh.replace("{\n", "");
                    mycountryoldh = mycountryoldh.replace("\n}", "");
                    var newvarh = mycountryoldh.split(",");
                    var setcountryh = newvarh[0].slice(14);
                    var mycountryh = setcountryh.replace('"', "");

                    var countryclassh = document.getElementsByClassName('primehCountry');
            
                    for (var i = 0; i < countryclassh.length; i++) {
                      var counrtylisth = countryclassh[i].getAttribute('data-countryselectedh');
                      var position = counrtylisth.search(mycountryh);
                      primehcountryName = mycountryh;
                      if(position < 0){ 
                          countryclassh[i].style.cssText = 'display:none !important';
                          countryclassh[i].classList.add("removeme");
                          // countryclassh[i].remove();
                      }else{
                        countryclassh[i].style.display= 'block';

                        countryclassh[i].setAttribute('countryrule', '1');
                        if (countryclassh[i].classList.contains('primehScreenSize')) {
                          var screenlist = countryclassh[i].getAttribute('data-screensizeselectedh');
                          var screensizeArray = screenlist.split(",");
                          var smdevice = window.matchMedia( "screen and (max-width: 767.98px)" );
                          var mddevice = window.matchMedia( "screen and (min-width: 768px) and (max-width: 991.98px)" );
                          var lgdevice = window.matchMedia( "screen and (min-width: 992px) and (max-width: 1199.98px)" );
                          var xldevice = window.matchMedia( "(min-width: 1200px)" );

                          if (smdevice.matches ){
                            if(screensizeArray[0] == '1'){
                            }else{
                              countryclassh[i].style.setProperty("display", "none", "important");
                            }
                          }else if( mddevice.matches){
                            if(screensizeArray[1] == '1'){
                            }else{
                              countryclassh[i].style.setProperty("display", "none", "important");
                            }
                          }else if(lgdevice.matches){
                            if(screensizeArray[2] == '1'){
                            }else{
                              countryclassh[i].style.setProperty("display", "none", "important");
                            }
                          }else{
                            if(screensizeArray[3] == '1'){
                            }else{
                              countryclassh[i].style.setProperty("display", "none", "important");
                            }
                          }

                        }

                      }

                    }

                    removehighlight();
                    
                }
            };
            xhttp.open("GET", "https://geoloc.thapi.workers.dev/", true);
            xhttp.send();
            
        }

    }

    window.addEventListener('resize', screensizehFunction);

    function screensizehFunction() { 
      var screensizeclass = document.getElementsByClassName('primehScreenSize');
      for (var i = 0; i < screensizeclass.length; i++) {
        var issetcountryrule = screensizeclass[i].getAttribute('countryrule');
        if( issetcountryrule == '1'){
          var screenlist = screensizeclass[i].getAttribute('data-screensizeselectedh');
          var screensizeArray = screenlist.split(",");
          
          var smdevice = window.matchMedia( "screen and (max-width: 767.98px)" );
          var mddevice = window.matchMedia( "screen and (min-width: 768px) and (max-width: 991.98px)" );
          var lgdevice = window.matchMedia( "screen and (min-width: 992px) and (max-width: 1199.98px)" );
          var xldevice = window.matchMedia( "(min-width: 1200px)" );

          if (smdevice.matches ){
            if(screensizeArray[0] == '1'){
                screensizeclass[i].style.display= 'block';
            }else{
                screensizeclass[i].style.setProperty("display", "none", "important");
            }
          }else if( mddevice.matches){
            if(screensizeArray[1] == '1'){
                screensizeclass[i].style.display= 'block';
            }else{
                screensizeclass[i].style.setProperty("display", "none", "important");
            }
          }else if(lgdevice.matches){
            if(screensizeArray[2] == '1'){
                screensizeclass[i].style.display= 'block';
            }else{
                screensizeclass[i].style.setProperty("display", "none", "important");
            }
          }else{
            if(screensizeArray[3] == '1'){
                screensizeclass[i].style.display= 'block';
            }else{
                screensizeclass[i].style.setProperty("display", "none", "important");
            }
          }

        }
      }

    }

    function setCookieprimeh(cname, cvalue, exdays) {
      var d = new Date();
      var time = setcookietimestamph(exdays);
      if(exdays < 5){
        d.setTime(d.getTime() + (time * 60 * 1000));
      }else if(exdays > 4 && exdays < 8){
        d.setTime(d.getTime() + (time * 60 * 60 * 1000));
      }else if(exdays > 7){
        d.setTime(d.getTime() + (time * 24 * 60 * 60 * 1000));
      }
      
      var expires = "expires="+d.toUTCString();
      document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }

    function getCookieprimeh(cname) {
      var name = cname + "=";
      var ca = document.cookie.split(';');
      for(var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
          c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
          return c.substring(name.length, c.length);
        }
      }
      return "";
    }

    function setcookietimestamph(time) {
        var realtime='';
        if(time==1){
            realtime=1;
        }else if(time==2){
            realtime=5;
        }else if(time==3){
            realtime=10;
        }else if(time==4){
            realtime=30;
        }else if(time==5){
            realtime=1;
        }else if(time==6){
            realtime=6;
        }else if(time==7){
            realtime=12;
        }else if(time==8){
            realtime=1;
        }else if(time==9){
            realtime=7;
        }else if(time==10){
            realtime=15;
        }else if(time==11){
            realtime=30;
        }
        return realtime;
    }


</script>